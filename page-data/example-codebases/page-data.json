{"componentChunkName":"component---src-templates-docs-js","path":"/example-codebases","result":{"data":{"site":{"siteMetadata":{"title":"Developer","docsLocation":"https://github.com/screencloud/developer/tree/master/docs/content"}},"mdx":{"fields":{"id":"f3bee6b0-bd19-59ae-b5c1-3ecd4fd9b8e0","title":"Example Codebases","slug":"/example-codebases"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Example Codebases\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Our sample apps are all hosted in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/screencloud/developer\"\n  }), \"Github repo\"), \". They're free to use, either to learn from or to copy and paste as the starting point for your own apps.\"), mdx(\"p\", null, \"For any issues or questions, please \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/screencloud/developer/issues\"\n  }), \"raise an issue\"), \".\"), mdx(\"h2\", null, \"JavaScript Sample App\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/screencloud/developer/tree/master/examples/javascript-app\"\n  }), \"https://github.com/screencloud/developer/tree/master/examples/javascript-app\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connects to the Player and reads a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"config\"), \" value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports preloading by fetching the first joke in advance, but not refreshing jokes until the app is visible on screen.\")), mdx(\"p\", null, \"To use:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"npm install\\nnpm start\\n\")), mdx(\"h2\", null, \"TypeScript Sample App\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/screencloud/developer/tree/master/examples/typescript-app\"\n  }), \"https://github.com/screencloud/developer/tree/master/examples/typescript-app\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connects to the Player and reads a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"config\"), \" value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Config is fully typed (Look for the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppConfig\"), \" interface in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"index.ts\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports preloading by fetching the first joke in advance, but not refreshing jokes until the app is visible on screen.\")), mdx(\"p\", null, \"To use:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"npm install\\nnpm start\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#javascript-sample-app","title":"JavaScript Sample App"},{"url":"#typescript-sample-app","title":"TypeScript Sample App"}]},"parent":{"relativePath":"example-codebases.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/add-to-app-store","title":"Add to App Store"}}},{"node":{"fields":{"slug":"/app-lifecycle","title":"App Lifecycle"}}},{"node":{"fields":{"slug":"/example-codebases","title":"Example Codebases"}}},{"node":{"fields":{"slug":"/example-user-apps","title":"Example applications created by clients"}}},{"node":{"fields":{"slug":"/firebase-react-app","title":"Create a ScreenCloud app using Firebase and React"}}},{"node":{"fields":{"slug":"/get-started","title":"Get Started"}}},{"node":{"fields":{"slug":"/","title":"Develop a ScreenCloud App"}}},{"node":{"fields":{"slug":"/overview","title":"Overview"}}},{"node":{"fields":{"slug":"/preloading","title":"Preloading"}}},{"node":{"fields":{"slug":"/themes","title":"Themes"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"f3bee6b0-bd19-59ae-b5c1-3ecd4fd9b8e0"}}}